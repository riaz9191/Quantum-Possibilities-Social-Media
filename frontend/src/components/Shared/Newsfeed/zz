import React, { useState, useEffect, useRef } from "react";
import {
  FaThumbsUp,
  FaComment,
  FaShare,
  FaEllipsisH,
  FaLaugh,
  FaHeart,
  FaThumbsUp as FaThumbsUpFilled,
  FaClosedCaptioning,
  FaCrosshairs,
  FaTimes,
  FaBookmark,
  FaFlag,
  FaBan,
  FaBellSlash,
  FaLink,
} from "react-icons/fa";
import axios from "axios";
import { Link } from "react-router-dom";

const Post = () => {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [showReactions, setShowReactions] = useState(false);
  const [reactions, setReactions] = useState([]);
  const [showMoreComments, setShowMoreComments] = useState(true);
  const [showDropdown, setShowDropdown] = useState(false);
  const dropdownRef = useRef(null);

  const fetchPosts = async () => {
    try {
      const accessToken = localStorage.getItem("accessToken");
      const refreshToken = localStorage.getItem("refreshToken");

      if (!accessToken || !refreshToken) {
        throw new Error("Authentication tokens not found");
      }

      const response = await axios.get(
        "https://quantumpossibilities.eu:82/api/get-all-users-posts?pageNo=1&pageSize=10",
        {
          headers: {
            Authorization: `Bearer ${accessToken}`,
            "Content-Type": "application/json",
          },
          withCredentials: true,
        }
      );
      console.log(response.data.posts);

      setPosts(response.data.posts); // Adjust this based on your API response structure
      setLoading(false);
    } catch (error) {
      console.error("Error fetching posts:", error);
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  const handleShowMoreComments = () => {
    setShowMoreComments(!showMoreComments);
  };

  const handleReaction = (reaction) => {
    setReactions([...reactions, reaction]);
    setShowReactions(false);
  };

  const handleShowReactions = () => {
    setShowReactions(!showReactions);
  };

  const toggleDropdown = () => {
    setShowDropdown(!showDropdown);
  };

  const handleClickOutside = (event) => {
    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
      setShowDropdown(false);
    }
  };

  useEffect(() => {
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  if (loading) {
    return <div>Loading...</div>;
  }

  return (
    <div>
      {posts.map((post) => (
        <div key={post.id} className="bg-white p-4 shadow-md rounded-lg mb-4 mt-4">
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center">
              <img
                src={`https://quantumpossibilities.eu:82/uploads/${post.profilePic}`}
                alt="Profile"
                className="w-10 h-10 rounded-full mr-2"
              />
              <div>
                <p className="font-semibold">{post.userName}</p>
                <p className="text-gray-500 text-sm">{post.timeAgo}</p>
              </div>
            </div>
            <div className="flex gap-4 relative">
              <button onClick={toggleDropdown}>
                <FaEllipsisH />
              </button>
              <FaTimes/>
              {showDropdown && (
                <div
                  ref={dropdownRef}
                  className="absolute top-8 right-0 w-48 border-2 bg-white rounded-md shadow-lg z-20"
                >
                  <ul className="py-1">
                    <li className="flex items-center px-4 py-2 hover:bg-gray-100 cursor-pointer">
                      <FaTimes className="mr-3" />
                      <span>Hide Post</span>
                    </li>
                    <li className="flex items-center px-4 py-2 hover:bg-gray-100 cursor-pointer">
                      <FaBookmark className="mr-3" />
                      <span>Bookmark</span>
                    </li>
                    <li className="flex items-center px-4 py-2 hover:bg-gray-100 cursor-pointer">
                      <FaFlag className="mr-3" />
                      <span>Report</span>
                    </li>
                    <li className="flex items-center px-4 py-2 hover:bg-gray-100 cursor-pointer">
                      <FaBan className="mr-3" />
                      <span>Block</span>
                    </li>
                    <li className="flex items-center px-4 py-2 hover:bg-gray-100 cursor-pointer">
                      <FaBellSlash className="mr-3" />
                      <span>Turn off notifications</span>
                    </li>
                    <li className="flex items-center px-4 py-2 hover:bg-gray-100 cursor-pointer">
                      <FaLink className="mr-3" />
                      <span>Copy Link</span>
                    </li>
                  </ul>
                </div>
              )}
            </div>
          </div>
          <img
            src={`https://quantumpossibilities.eu:82/uploads/${post.postImage}`}
            alt="Post"
            className="w-full rounded-lg mb-4"
          />
          <div className="flex items-center justify-between mb-2">
            <Link to="/view-all-reaction">
              <div className="flex items-center space-x-2">
                <span>{reactions.length}</span>
                {reactions.includes("like") && (
                  <FaThumbsUpFilled className="text-blue-500" />
                )}
                {reactions.includes("love") && <FaHeart className="text-red-500" />}
                {reactions.includes("laugh") && (
                  <FaLaugh className="text-yellow-500" />
                )}
              </div>
            </Link>
            <div className="flex items-center space-x-4">
              <span>{post.commentsCount} Comments</span>
              <span>{post.sharesCount} Shares</span>
            </div>
          </div>
          <div className="flex justify-around border-t border-b py-2 relative">
            <button
              className="flex items-center space-x-1"
              onClick={handleShowReactions}
            >
              <FaThumbsUp />
              <span>Like</span>
            </button>
            <button className="flex items-center space-x-1">
              <FaComment />
              <span>Comment</span>
            </button>
            <button className="flex items-center space-x-1">
              <FaShare />
              <span>Share</span>
            </button>
            {showReactions && (
              <div className="absolute bottom-12 left-0 flex space-x-2 bg-white p-2 shadow-lg rounded-lg">
                <button onClick={() => handleReaction("like")}>
                  <FaThumbsUp className="text-blue-500" />
                </button>
                <button onClick={() => handleReaction("love")}>
                  <FaHeart className="text-red-500" />
                </button>
                <button onClick={() => handleReaction("laugh")}>
                  <FaLaugh className="text-yellow-500" />
                </button>
              </div>
            )}
          </div>
          <div className="mt-2">
            {showMoreComments ? (
              post.comments.map((comment) => (
                <div key={comment.id} className="mb-2">
                  <div className="flex items-center space-x-2">
                    <img
                      src={profileImg}
                      alt="User"
                      className="w-8 h-8 rounded-full"
                    />
                    <div>
                      <p className="font-semibold">{comment.userName}</p>
                      <p className="text-sm">{comment.text}</p>
                      <div className="flex items-center space-x-2 text-sm text-gray-500">
                        <span>{comment.timeAgo}</span>
                        <button className="font-semibold">Like</button>
                        <button className="font-semibold">Reply</button>
                      </div>
                    </div>
                  </div>
                  {comment.replies.length > 0 && (
                    <div className="ml-10 mt-2">
                      <button
                        className="text-sm text-gray-500"
                        onClick={() => setShowMoreComments(!showMoreComments)}
                      >
                        View {comment.replies.length} Reply
                      </button>
                      {showMoreComments &&
                        comment.replies.map((reply) => (
                          <div
                            key={reply.id}
                            className="flex items-center space-x-2 mt-2"
                          >
                            <img
                              src={profileImg}
                              alt="User"
                              className="w-8 h-8 rounded-full"
                            />
                            <div>
                              <p className="font-semibold">{reply.name}</p>
                              <p className="text-sm">{reply.text}</p>
                            </div>
                          </div>
                        ))}
                    </div>
                  )}
                </div>
              ))
            ) : (
              <button
                className="text-sm text-gray-500"
                onClick={handleShowMoreComments}
              >
                View more comments
              </button>
            )}
          </div>
          <div className="flex items-center mt-4">
            <img src={profileImg} alt="User" className="w-8 h-8 rounded-full" />
            <input
              type="text"
              placeholder="Write a public comment..."
              className="w-full ml-2 p-2 rounded-full bg-gray-100 focus:outline-none"
            />
          </div>
        </div>
      ))}
    </div>
  );
};

export default Post;
